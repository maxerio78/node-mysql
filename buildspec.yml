version: 0.2

env:
  variables:
    CLUSTER_NAME: "cluster-k8s-devops"
    AWS_REGION: "us-east-1"
    IMAGE_REPO_NAME: "node-mysql"
    IMAGE_TAG: "latest"                  # แนะนำ: ใช้ $CODEBUILD_RESOLVED_SOURCE_VERSION แทนเพื่อ tag ตาม commit
    ACCOUNT_ID: "399423262543"
    K8S_NAMESPACE: "default"
    DEPLOYMENT_FILE: "k8s/deployment.yaml"
    SERVICE_FILE: "k8s/service.yaml"
    EKS_RELEASE_DATE: "2025-01-17"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - "set -euo pipefail"
      - "echo Checking versions..."
      - "node -v"
      - "npm -v"
      - "aws --version"
      - 'echo "Installing kubectl (EKS S3 with fallback to dl.k8s.io)..."'
      - 'K8S_VER=$(aws eks describe-cluster --name $CLUSTER_NAME --region $AWS_REGION --query "cluster.version" --output text)'
      - 'echo Detected cluster.version: ${K8S_VER}'
      - 'EKS_DATE=${EKS_RELEASE_DATE}'
      - 'KUBE_URL_AWS="https://s3.us-west-2.amazonaws.com/amazon-eks/${K8S_VER}/${EKS_DATE}/bin/linux/amd64/kubectl"'
      - 'KUBE_URL_UP="https://dl.k8s.io/release/v${K8S_VER}.0/bin/linux/amd64/kubectl"'
      - 'echo "Trying: ${KUBE_URL_AWS}"'
      - 'if curl -sIf "${KUBE_URL_AWS}" > /dev/null; then echo "Downloading from EKS S3..."; curl --retry 3 --retry-delay 2 -fL -o /usr/local/bin/kubectl "${KUBE_URL_AWS}"; else echo "EKS S3 not found for ${K8S_VER}, fallback to ${KUBE_URL_UP}"; curl --retry 3 --retry-delay 2 -fL -o /usr/local/bin/kubectl "${KUBE_URL_UP}"; fi'
      - 'chmod +x /usr/local/bin/kubectl'
      - 'file /usr/local/bin/kubectl | grep -qi "ELF 64-bit" || (echo "kubectl download looks invalid"; head -n 2 /usr/local/bin/kubectl; exit 1)'
      - 'kubectl version --client --output=yaml || (echo "kubectl not working"; exit 1)'
      

  pre_build:
    commands:
      - "echo Installing Node.js dependencies..."
      - "npm install"
      - "echo Logging in to Amazon ECR..."
      - "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - "echo Building Docker image..."
      - "docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG ."
      - "docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"

  build:
    commands:
      - "echo Pushing Docker image to ECR..."
      - "docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"

  post_build:
    commands:
      - "echo Updating kubeconfig for EKS..."
      - "aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION"
      - "echo Deploying..."
      - "bash scripts/deploy.sh"
      - "echo Done."

artifacts:
  files:
    - "**/*"
