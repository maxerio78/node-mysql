version: 0.2

env:
  variables:
    CLUSTER_NAME: "trial-dev-eksdemo1"         # Replace with your EKS cluster name
    AWS_REGION: "us-east-1"           # Replace with your AWS region
    IMAGE_REPO_NAME: "node-mysql"          # ECR repo name
    IMAGE_TAG: "latest"                    # Can be a commit hash for versioning

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Installing dependencies..."
      - npm install
      - echo "Installing AWS CLI v2 and kubectl"
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install
      - curl -o kubectl https://amazon-eks.s3.$AWS_REGION.amazonaws.com/$(aws eks describe-cluster --name $CLUSTER_NAME --region $AWS_REGION --query "cluster.version" --output text)/2025-01-17/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Updating kubeconfig for EKS..."
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
      - echo "Deploying to EKS..."
      - kubectl set image deployment/node-mysql-deployment node-mysql-container=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - kubectl apply -f k8s/

artifacts:
  files:
    - '**/*'
